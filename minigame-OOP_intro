//ES6 classes are really just syntactic sugar. This isn't really classical inheritance 
//as one would see with class-based languages such as Java. This is prototypal inheritance; 
//objects inherit properties and methods of other objects directly, via the prototype chain


class Character {
  constructor(name, weapon) {
    this.name = name;
    this.weapon = weapon;
  }
  attack() {
    return 'attack with ' + this.weapon
  }
}

class Elf extends Character { 
  constructor(name, weapon, type) {
    // console.log('what am i?', this); this gives an error if called here. call super first to properly scope 'this'
    super(name, weapon) 
    console.log('what am i?', this);
    this.type = type;
  }
}

class Ogre extends Character {
  constructor(name, weapon, color) {
    super(name, weapon);
    this.color = color;
  }
  makeFort() { // this is like extending our prototype.
    return 'Fortification constructed'
  }
}

const houseElf = new Elf('Dobby', 'magic', 'house')
//houseElf.makeFort() // error
const shrek = new Ogre('Shrek', 'club', 'green')
shrek.makeFort()


